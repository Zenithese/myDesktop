[{"/Users/justin/Desktop/stuff/projects/react-desktop/src/index.js":"1","/Users/justin/Desktop/stuff/projects/react-desktop/src/App.js":"2","/Users/justin/Desktop/stuff/projects/react-desktop/src/reportWebVitals.js":"3","/Users/justin/Desktop/stuff/projects/react-desktop/src/context_menu/contextmenu.js":"4","/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/folder.js":"5","/Users/justin/Desktop/stuff/projects/react-desktop/src/contents/contents.js":"6","/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/placeholder.js":"7","/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/ghostFolder.js":"8","/Users/justin/Desktop/stuff/projects/react-desktop/src/contents/contentsBorder.js":"9"},{"size":500,"mtime":1609553990775,"results":"10","hashOfConfig":"11"},{"size":6023,"mtime":1610503238000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609553990775,"results":"13","hashOfConfig":"11"},{"size":3921,"mtime":1610484282126,"results":"14","hashOfConfig":"11"},{"size":5761,"mtime":1610489213398,"results":"15","hashOfConfig":"11"},{"size":5277,"mtime":1610501820995,"results":"16","hashOfConfig":"11"},{"size":770,"mtime":1609890428843,"results":"17","hashOfConfig":"11"},{"size":4708,"mtime":1609904109072,"results":"18","hashOfConfig":"11"},{"size":3900,"mtime":1610474228110,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"19nqxo8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/justin/Desktop/stuff/projects/react-desktop/src/index.js",[],["43","44"],"/Users/justin/Desktop/stuff/projects/react-desktop/src/App.js",[],"/Users/justin/Desktop/stuff/projects/react-desktop/src/reportWebVitals.js",[],"/Users/justin/Desktop/stuff/projects/react-desktop/src/context_menu/contextmenu.js",[],"/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/folder.js",["45","46","47","48","49"],"import './folder.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ContentEditable from 'react-contenteditable';\n\nexport default function Folder({ left, top, title, parent, id, folders, setFolders, dimensions, setOpenedLatest }) {\n\n    const [value, setValue] = useState(title)\n    const [moving, setMoving] = useState(false)\n    const [offSetX, setOffSetX] = useState(0)\n    const [offSetY, setOffSetY] = useState(0)\n    const [position, setPosition] = useState(parent ? \"grid\" : \"fixed\")\n    const [x, setX] = useState(left)\n    const [y, setY] = useState(top)\n    const [z, setZ] = useState(\"0\")\n    const [className, setClassName] = useState(\"droppable folder\")\n    const [nest, setNest] = useState(null)\n    const [originalPos, setOriginalPos] = useState([0, 0])\n    const folderEl = useRef(null)\n    \n    useEffect(() => {\n        let mounted = true\n        if (!moving && nest && mounted) {\n            if (nest.id.slice(2) === folderEl.current.id.slice(2)) {\n                setX(originalPos[0])\n                setY(originalPos[1])\n                return\n            }\n            const nestClassName = nest.className.split(\" \")\n            const temp = { ...folders }\n            if (temp[id].parent) temp[temp[id].parent].children = temp[temp[id].parent].children.filter(folderId => folderId !== id)\n            if (nestClassName[1] === \"droppable\") {\n                temp[nest.id.slice(2)].children.push(Number(id))\n                temp[id].parent = Number(nest.id.slice(2))\n                setPosition(null)\n                setFolders(temp)\n                nest.className = nest.className.slice(8)\n            } else if (nest.className === \"App\") {\n                temp[id].parent = null\n                temp[id].top = y\n                temp[id].left = x\n                setFolders(temp)\n            }\n            return function cleanup() { mounted = false }\n        }\n    }, [moving])\n\n    useEffect (() => {\n        if (offSetY) {\n            document.addEventListener('mousemove', drag)\n            document.addEventListener('mouseup', stop)\n        }\n    }, [offSetY])\n\n    useEffect(() => {\n        if (position === null) {\n            setY(nest.getBoundingClientRect().top)\n            setX(nest.getBoundingClientRect().left + 3)\n            setPosition(\"grid\")\n        } else if (position === \"fixed\") {\n            if (parent !== null) {\n                document.querySelector(\".App\").appendChild(folderEl.current)\n            }\n        }\n    }, [position])\n\n    const handleInput = (e) => {\n        setValue(e.target.value)\n    }\n\n    const start = (e) => {\n        setOriginalPos([x, y])\n        setClassName(\"folder\")\n        setZ(\"1000\")\n        setMoving(true)\n        setOffSetX(e.pageX - e.target.getBoundingClientRect().left + 5)\n        setOffSetY(e.pageY - e.target.getBoundingClientRect().top + 5)\n    }\n\n    const drag = (e) => {\n        e.preventDefault()\n        if (position !== \"fixed\") setPosition(\"fixed\")\n        if (folderEl.current) {\n            setY(Math.min(Math.max(0, e.pageY - offSetY), document.body.clientHeight - folderEl.current.offsetHeight))\n            setX(Math.min(Math.max(0, e.pageX - offSetX), document.body.clientWidth - folderEl.current.offsetWidth))\n        }\n        nestFolder(e)\n    }\n\n    const stop = (e) => {\n        e.preventDefault()\n        if (parent !== null && document.getElementById(`c-${parent}`) && e.target.parentElement.parentElement.parentElement.id === \"App\") {\n            document.getElementById(`c-${parent}`).appendChild(folderEl.current)\n        } \n        setMoving(false)\n        setOffSetX(0)\n        setOffSetY(0)\n        setZ(\"0\")\n        setClassName(\"droppable folder\")\n        document.removeEventListener('mousemove', drag)\n        document.removeEventListener('mouseup', stop)\n    }\n\n    const handleDoubleClick = () => {\n        const temp = { ...folders }\n        temp[id].open = true\n        setFolders(temp)\n        setOpenedLatest(id)\n    }\n\n    const nestFolder = (e) => {\n        e.preventDefault()\n        const folder = e.target.parentElement ? e.target.parentElement.parentElement : null;\n        if (folder) {\n            folder.hidden = true\n            let nestable = document.elementFromPoint(e.clientX, e.clientY)\n            if (nestable = nestable.closest(\".droppable\")) {\n                 if (nestable.className.slice(0, 7) !== \"current\") {\n                    nestable.className = \"current \" + nestable.className\n                    setNest(nestable)\n                }\n            } else if (nestable = document.querySelector(\".current\")) {\n                nestable.className = nestable.className.slice(8)\n                setNest(document.querySelector(\".App\"))\n            }\n            folder.hidden = false\n        }\n    }\n\n    return (\n        <div id={`f-${id}`}\n            ref={folderEl}\n            className={className}\n            style={{ \"position\": position, \"top\": Math.min(y, dimensions.height - 94), \"left\": Math.min(x, dimensions.width - 94), \"zIndex\": z }}>\n            <div className=\"folder-image-container\">\n                <img draggable=\"false\"\n                    id={id}\n                    className=\"folder-image\"\n                    alt=\"\" \n                    src=\"http://icon-park.com/imagefiles/folder_icon_yellow.png\"\n                    onMouseDown={(e) => start(e)} \n                    onDoubleClick={() => handleDoubleClick()} />\n            </div>\n            <div className=\"folder-name-container\" >\n                <ContentEditable\n                    id=\"input\"\n                    html={value}\n                    data-column=\"item\"\n                    className=\"content-editable\"\n                    onChange={(e) => handleInput(e)} />\n            </div>\n        </div>\n    )\n}","/Users/justin/Desktop/stuff/projects/react-desktop/src/contents/contents.js",["50","51","52"],"import './contents.css'\nimport React, { useState, useEffect, useRef } from 'react';\nimport ContentsBorder from './contentsBorder'\nimport Folder from '../folder/folder';\n\nexport default function Contents({ id, children, folders, setFolders, contentX, contentY, contentWidth, contentHeight, dimensions, openedLatest, setOpenedLatest }) {\n\n    const contentsEl = useRef(null)\n    const contentsContainerEl = useRef(null)\n    const [gridRow, setGridRow] = useState(\"\")\n    const [gridCol, setGridCol] = useState(\"\")\n    const [offSetX, setOffSetX] = useState(0)\n    const [offSetY, setOffSetY] = useState(0)\n    const [x, setX] = useState(contentX)\n    const [y, setY] = useState(contentY)\n    const [className, setClassName] = useState(\"droppable contents\")\n    const [width, setWidth] = useState(contentWidth)\n    const [height, setHeight] = useState(contentHeight)\n    const [dropped, setdropped] = useState(false)\n\n    useEffect(() => {\n        if (id.slice(2) === openedLatest) {\n            document.querySelector(\".App\").appendChild(contentsContainerEl.current)\n        }\n    }, [openedLatest, id])\n\n    useEffect(() => {\n        const contents = contentsEl.current\n        const width = contents.clientWidth\n        const height = contents.clientHeight\n        const row = Math.floor(height / 100)\n        const col = Math.floor(width / 100)\n        setGridRow(\"100px \".repeat(row))\n        setGridCol(\"100px \".repeat(col))\n        const children = contents.children\n        for (let i = 0; i < children.length; i++) {\n            children[i].style.gridRowStart = Math.floor(i / row) + 1\n            children[i].style.gridColumnStart = (i + 1) % col || col\n        }\n    })\n\n    useEffect(() => {\n        if (offSetY) {\n            document.addEventListener('mousemove', drag)\n            document.addEventListener('mouseup', stop)\n        }\n    }, [offSetY])\n\n    useEffect(() => {\n        if (dropped) {\n            const temp = { ...folders }\n            temp[id.slice(2)].contentX = x\n            temp[id.slice(2)].contentY = y\n            setFolders(temp)\n            setdropped(false)\n        }\n    })\n\n    const start = (e) => {\n        if (e.target.className === \"close-button\") return\n        setClassName(\"contents\")\n        document.querySelector(\".App\").appendChild(contentsContainerEl.current)\n        setOffSetX(e.pageX - e.target.getBoundingClientRect().left)\n        setOffSetY(e.pageY - e.target.getBoundingClientRect().top)\n    }\n\n    const drag = (e) => {\n        e.preventDefault()\n        if (contentsContainerEl.current) {\n            setY(Math.min(Math.max(0, e.pageY - offSetY), document.body.clientHeight - contentsContainerEl.current.offsetHeight))\n            setX(Math.min(Math.max(0, e.pageX - offSetX), document.body.clientWidth - contentsContainerEl.current.offsetWidth))\n        }\n    }\n\n    const stop = (e) => {\n        e.preventDefault()\n        setOffSetX(0)\n        setOffSetY(0)\n        setClassName(\"droppable contents\")\n        setdropped(true)\n        document.removeEventListener('mousemove', drag)\n        document.removeEventListener('mouseup', stop)\n    }\n\n    const handleClose = () => {\n        const temp = { ...folders }\n        temp[id.slice(2)].open = false\n        setFolders(temp)\n    }\n\n    const handleMouseDown = (e) => {\n        if (e.target.className === \"close-button\" || e.target.className === \"folder-image\") return\n        document.querySelector(\".App\").appendChild(contentsContainerEl.current)\n    }\n\n    const renderChildren = children.map(child => {\n        return (\n            <Folder \n                id={child}\n                top={folders[child].top}\n                left={folders[child].left} \n                title={folders[child].title} \n                children={folders[child].children} \n                parent={folders[child].parent} \n                folders={folders}\n                setFolders={setFolders}\n                dimensions={dimensions}\n                openedLatest={openedLatest}\n                setOpenedLatest={setOpenedLatest}\n                key={child} \n            />\n        )\n    })\n\n    return (\n        <div ref={contentsContainerEl}\n            className=\"contents-container\"\n            onMouseDown={(e) => handleMouseDown(e)}\n            style={{ \"display\": \"grid\", \"top\": Math.min(y, dimensions.height - height - 5), \"left\": Math.min(x, dimensions.width - width - 5), \"width\": `${width}px`, \"height\": `${height}px` }}>\n            <ContentsBorder \n                id={id}\n                width={width} \n                setWidth={setWidth} \n                height={height} \n                setHeight={setHeight} \n                setX={setX} \n                setY={setY} \n                folders={folders}\n                setFolders={setFolders} />\n            <div className=\"contents-handle\"\n                onMouseDown={(e) => start(e)}>\n                <div className=\"close-button\" onClick={() => handleClose()}>x</div>\n            </div>\n            <div\n                id={id}\n                ref={contentsEl}\n                className={className}\n                style={{ \"gridTemplateColumns\": gridCol, \"gridTemplateRows\": gridRow, \"width\": `${width}px`, \"height\": `${height - 15}px` }}>\n                {renderChildren}\n            </div>\n        </div>\n    )\n}","/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/placeholder.js",[],["53","54"],"/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/ghostFolder.js",["55","56","57","58","59","60","61","62","63"],"/Users/justin/Desktop/stuff/projects/react-desktop/src/contents/contentsBorder.js",["64","65"],"import './contents.css'\nimport React, { useState, useEffect } from 'react';\n\nexport default function ContentsBorder({ id, width, setWidth, height, setHeight, setX, setY, folders, setFolders }) {\n\n    const [section, setSection] = useState(null)\n    const [startX, setStartX] = useState(null)\n    const [startY, setStartY] = useState(null)\n    const [startWidth, setStartWidth] = useState(null)\n    const [startHeight, setStartHeight] = useState(null)\n    const [offSetX, setOffSetX] = useState(0)\n    const [offSetY, setOffSetY] = useState(0)\n    const [finished, setFinished] = useState(false)\n\n    useEffect(() => {\n        if (finished) {\n            const temp = { ...folders }\n            temp[id.slice(2)].contentWidth = width\n            temp[id.slice(2)].contentHeight = height\n            setFolders(temp)\n            setFinished(false)\n        }\n    })\n\n    useEffect(() => {\n        if (section) {\n            document.addEventListener('mousemove', drag)\n            document.addEventListener('mouseup', stop)\n        }\n    }, [section])\n\n    const start = (e) => {\n        setSection(e.target.className)\n        setStartX(e.pageX)\n        setStartY(e.pageY)\n        setStartWidth(width)\n        setStartHeight(height)\n        setOffSetX(e.pageX - e.target.getBoundingClientRect().right)\n        setOffSetY(e.pageY - e.target.getBoundingClientRect().bottom)\n    }\n\n    const drag = (e) => {\n        e.preventDefault()\n        if (section === \"side-top\") {\n            setHeight(Math.max(startHeight - e.pageY + startY, 150))\n            setY(Math.min(e.pageY - offSetY, startY + startHeight - offSetY - 150))\n        } else if (section === \"side-left\") {\n            setWidth(Math.max(startWidth - e.pageX + startX, 150))\n            setX(Math.min(e.pageX - offSetX, startX + startWidth - offSetX - 150))\n        } else if (section === \"side-right\") {\n            setWidth(Math.max(startWidth + e.pageX - startX, 150))\n        } else if (section === \"side-bottom\") {\n            setHeight(Math.max(startHeight + e.pageY - startY, 150))\n        } else if (section === \"corner-1\") {\n            setWidth(Math.max(startWidth - e.pageX + startX, 150))\n            setHeight(Math.max(startHeight - e.pageY + startY, 150))\n            setX(Math.min(e.pageX - offSetX, startX + startWidth - offSetX - 150))\n            setY(Math.min(e.pageY - offSetY, startY + startHeight - offSetY - 150))\n        } else if (section === \"corner-2\") {\n            setWidth(Math.max(startWidth + e.pageX - startX, 150))\n            setHeight(Math.max(startHeight - e.pageY + startY, 150))\n            setY(Math.min(e.pageY - offSetY, startY + startHeight - offSetY - 150))\n        } else if (section === \"corner-3\") {\n            setWidth(Math.max(startWidth - e.pageX + startX, 150))\n            setHeight(Math.max(startHeight + e.pageY - startY, 150))\n            setX(Math.min(e.pageX - offSetX, startX + startWidth - offSetX - 150))\n        } else if (section === \"corner-4\") {\n            setWidth(Math.max(startWidth + e.pageX - startX, 150))\n            setHeight(Math.max(startHeight + e.pageY - startY, 150))\n        }\n    }\n\n    const stop = (e) => {\n        e.preventDefault()\n        document.removeEventListener('mousemove', drag)\n        document.removeEventListener('mouseup', stop)\n        setSection(null)\n        setFinished(true)\n    }\n\n    return (\n        <div onMouseDown={(e) => start(e)}>\n            <div className=\"corner-1\"></div>\n            <div className=\"corner-2\"></div>\n            <div className=\"corner-3\"></div>\n            <div className=\"corner-4\"></div>\n            <div className=\"side-top\" style={{ \"width\": width }}></div>\n            <div className=\"side-left\" style={{ \"height\": height }}></div>\n            <div className=\"side-right\" style={{ \"height\": height }}></div>\n            <div className=\"side-bottom\" style={{ \"width\": width }}></div>\n        </div>\n    )\n}",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":45,"column":8,"nodeType":"72","endLine":45,"endColumn":16,"suggestions":"73"},{"ruleId":"70","severity":1,"message":"74","line":52,"column":8,"nodeType":"72","endLine":52,"endColumn":17,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"76","line":64,"column":8,"nodeType":"72","endLine":64,"endColumn":18,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":116,"column":17,"nodeType":"80","messageId":"81","endLine":116,"endColumn":58},{"ruleId":"78","severity":1,"message":"79","line":121,"column":24,"nodeType":"80","messageId":"81","endLine":121,"endColumn":69},{"ruleId":"70","severity":1,"message":"82","line":27,"column":5,"nodeType":"83","endLine":27,"endColumn":14,"suggestions":"84"},{"ruleId":"70","severity":1,"message":"74","line":47,"column":8,"nodeType":"72","endLine":47,"endColumn":17,"suggestions":"85"},{"ruleId":"70","severity":1,"message":"86","line":49,"column":5,"nodeType":"83","endLine":49,"endColumn":14,"suggestions":"87"},{"ruleId":"66","replacedBy":"88"},{"ruleId":"68","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":4,"column":8,"nodeType":"83","messageId":"92","endLine":4,"endColumn":19},{"ruleId":"90","severity":1,"message":"93","line":18,"column":12,"nodeType":"83","messageId":"92","endLine":18,"endColumn":24},{"ruleId":"90","severity":1,"message":"94","line":18,"column":26,"nodeType":"83","messageId":"92","endLine":18,"endColumn":41},{"ruleId":"90","severity":1,"message":"95","line":19,"column":12,"nodeType":"83","messageId":"92","endLine":19,"endColumn":24},{"ruleId":"90","severity":1,"message":"96","line":19,"column":26,"nodeType":"83","messageId":"92","endLine":19,"endColumn":41},{"ruleId":"70","severity":1,"message":"97","line":35,"column":8,"nodeType":"72","endLine":35,"endColumn":16,"suggestions":"98"},{"ruleId":"70","severity":1,"message":"99","line":42,"column":8,"nodeType":"72","endLine":42,"endColumn":17,"suggestions":"100"},{"ruleId":"78","severity":1,"message":"79","line":95,"column":17,"nodeType":"80","messageId":"81","endLine":95,"endColumn":58},{"ruleId":"78","severity":1,"message":"79","line":100,"column":24,"nodeType":"80","messageId":"81","endLine":100,"endColumn":69},{"ruleId":"70","severity":1,"message":"101","line":15,"column":5,"nodeType":"83","endLine":15,"endColumn":14,"suggestions":"102"},{"ruleId":"70","severity":1,"message":"74","line":30,"column":8,"nodeType":"72","endLine":30,"endColumn":17,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'folders', 'id', 'nest', 'originalPos', 'setFolders', 'x', and 'y'. Either include them or remove the dependency array. If 'setFolders' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["106"],"React Hook useEffect has missing dependencies: 'drag' and 'stop'. Either include them or remove the dependency array.",["107"],"React Hook useEffect has missing dependencies: 'nest' and 'parent'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setY' needs the current value of 'nest'.",["108"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect contains a call to 'setGridRow'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["109"],["110"],"React Hook useEffect contains a call to 'setdropped'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [dropped, folders, id, x, y, setFolders] as a second argument to the useEffect Hook.",["111"],["104"],["105"],"no-unused-vars","'Placeholder' is defined but never used.","unusedVar","'gridRowStart' is assigned a value but never used.","'setGridRowStart' is assigned a value but never used.","'gridColStart' is assigned a value but never used.","'setGridColStart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'nest'. Either include it or remove the dependency array.",["112"],"React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array.",["113"],"React Hook useEffect contains a call to 'setFinished'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [finished, folders, id, width, height, setFolders] as a second argument to the useEffect Hook.",["114"],["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"118","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [folders, id, moving, nest, originalPos, setFolders, x, y]",{"range":"135","text":"136"},"Update the dependencies array to be: [drag, offSetY, stop]",{"range":"137","text":"138"},"Update the dependencies array to be: [nest, parent, position]",{"range":"139","text":"140"},"Add dependencies array: []",{"range":"141","text":"142"},{"range":"143","text":"138"},"Add dependencies array: [dropped, folders, id, x, y, setFolders]",{"range":"144","text":"145"},"Update the dependencies array to be: [moving, nest]",{"range":"146","text":"147"},"Update the dependencies array to be: [offSetY, stop]",{"range":"148","text":"149"},"Add dependencies array: [finished, folders, id, width, height, setFolders]",{"range":"150","text":"151"},"Update the dependencies array to be: [drag, section, stop]",{"range":"152","text":"153"},[1913,1921],"[folders, id, moving, nest, originalPos, setFolders, x, y]",[2099,2108],"[drag, offSetY, stop]",[2491,2501],"[nest, parent, position]",[1676,1676],", []",[1853,1862],[2110,2110],", [dropped, folders, id, x, y, setFolders]",[1481,1489],"[moving, nest]",[1661,1670],"[offSetY, stop]",[861,861],", [finished, folders, id, width, height, setFolders]",[1038,1047],"[drag, section, stop]"]