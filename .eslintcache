[{"/Users/justin/Desktop/stuff/projects/react-desktop/src/index.js":"1","/Users/justin/Desktop/stuff/projects/react-desktop/src/App.js":"2","/Users/justin/Desktop/stuff/projects/react-desktop/src/reportWebVitals.js":"3","/Users/justin/Desktop/stuff/projects/react-desktop/src/context_menu/contextmenu.js":"4","/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/folder.js":"5","/Users/justin/Desktop/stuff/projects/react-desktop/src/contents/contents.js":"6","/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/placeholder.js":"7","/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/ghostFolder.js":"8","/Users/justin/Desktop/stuff/projects/react-desktop/src/contents/contentsBorder.js":"9","/Users/justin/Desktop/stuff/projects/react-desktop/src/floating_search_button/floating_search_button.js":"10","/Users/justin/Desktop/stuff/projects/react-desktop/src/gapi/gapi.js":"11","/Users/justin/Desktop/stuff/projects/react-desktop/src/doc/doc.js":"12","/Users/justin/Desktop/stuff/projects/react-desktop/src/greeting/greeting.js":"13"},{"size":500,"mtime":1611514424229,"results":"14","hashOfConfig":"15"},{"size":6643,"mtime":1611521274319,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1609553990775,"results":"17","hashOfConfig":"15"},{"size":5440,"mtime":1611450039626,"results":"18","hashOfConfig":"15"},{"size":5496,"mtime":1611511553054,"results":"19","hashOfConfig":"15"},{"size":5674,"mtime":1611521172408,"results":"20","hashOfConfig":"15"},{"size":770,"mtime":1609890428843,"results":"21","hashOfConfig":"15"},{"size":5258,"mtime":1610938738328,"results":"22","hashOfConfig":"15"},{"size":3900,"mtime":1610474228110,"results":"23","hashOfConfig":"15"},{"size":4564,"mtime":1611521826898,"results":"24","hashOfConfig":"15"},{"size":5634,"mtime":1611355629737,"results":"25","hashOfConfig":"15"},{"size":8638,"mtime":1611513612137,"results":"26","hashOfConfig":"15"},{"size":1599,"mtime":1611356147684,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"19nqxo8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/justin/Desktop/stuff/projects/react-desktop/src/index.js",[],["61","62"],"/Users/justin/Desktop/stuff/projects/react-desktop/src/App.js",["63","64"],"/Users/justin/Desktop/stuff/projects/react-desktop/src/reportWebVitals.js",[],"/Users/justin/Desktop/stuff/projects/react-desktop/src/context_menu/contextmenu.js",[],"/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/folder.js",["65","66","67","68","69","70"],"import './folder.css';\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport ContentEditable from 'react-contenteditable';\nimport { debounce } from 'lodash';\n\nexport default function Folder({ left, top, title, parent, id, folders, setFolders, dimensions, opened, setOpened }) {\n\n  const folderEl = useRef(null)\n  const [value, setValue] = useState(title)\n  const [className, setClassName] = useState(\"droppable folder\")\n  const [offSetX, setOffSetX] = useState(0)\n  const [offSetY, setOffSetY] = useState(0)\n  const [position, setPosition] = useState(parent ? \"grid\" : \"fixed\")\n  const [x, setX] = useState(left)\n  const [y, setY] = useState(top)\n  const [z, setZ] = useState(\"0\")\n  const [nest, setNest] = useState(null)\n  const [originalPos, setOriginalPos] = useState([0, 0])\n  const [update, setUpdate] = useState(false)\n\n  useEffect(() => {\n    let mounted = true\n    if (update && nest && mounted) {\n      if (nest.id.slice(2) === folderEl.current.id.slice(2)) {\n        setX(originalPos[0])\n        setY(originalPos[1])\n        nest.className = nest.className.slice(8)\n        setNest(null)\n        return\n      }\n      const nestClassName = nest.className.split(\" \")\n      const temp = { ...folders }\n      if (temp[id].parent) temp[temp[id].parent].children = temp[temp[id].parent].children.filter(folderId => folderId !== id)\n      if (nestClassName[1] === \"droppable\") {\n        temp[nest.id.slice(2)].children.push(Number(id))\n        temp[id].parent = Number(nest.id.slice(2))\n        setPosition(null)\n        setFolders(temp)\n        nest.className = nest.className.slice(8)\n      } else if (nest.id === \"App\") {\n        temp[id].parent = null\n        temp[id].top = y\n        temp[id].left = x\n        setFolders(temp)\n      }\n      setUpdate(false)\n      return function cleanup() { mounted = false }\n    } \n  })\n\n  useEffect(() => {\n    if (offSetY) {\n      document.addEventListener('mousemove', drag)\n      document.addEventListener('mouseup', stop)\n    }\n  }, [offSetY])\n\n  useEffect(() => {\n    if (position === null) {\n      setY(nest.getBoundingClientRect().top)\n      setX(nest.getBoundingClientRect().left + 3)\n      setPosition(\"grid\")\n    } else if (position === \"fixed\") {\n      if (parent !== null) {\n        document.querySelector(\".App\").appendChild(folderEl.current)\n      }\n    }\n  }, [position])\n\n  const start = (e) => {\n    setOriginalPos([x, y])\n    setClassName(\"folder\")\n    setZ(\"1000\")\n    setOffSetX(e.pageX - e.target.getBoundingClientRect().left + 5)\n    setOffSetY(e.pageY - e.target.getBoundingClientRect().top + 5)\n  }\n\n  const drag = (e) => {\n    e.preventDefault()\n    if (position !== \"fixed\") setPosition(\"fixed\")\n    if (folderEl.current) {\n      setY(Math.min(Math.max(0, e.pageY - offSetY), document.body.clientHeight - folderEl.current.offsetHeight))\n      setX(Math.min(Math.max(0, e.pageX - offSetX), document.body.clientWidth - folderEl.current.offsetWidth))\n    }\n    nestFolder(e)\n  }\n\n  const stop = (e) => {\n    e.preventDefault()\n    if (parent !== null && document.getElementById(`c-${parent}`) && e.target.parentElement.parentElement.parentElement.id === \"App\") {\n      document.getElementById(`c-${parent}`).appendChild(folderEl.current)\n    }\n    setUpdate(true)\n    setOffSetX(0)\n    setOffSetY(0)\n    setZ(\"0\")\n    setClassName(\"droppable folder\")\n    if (!nest && !parent) setNest(document.querySelector(\".App\"))\n    document.removeEventListener('mousemove', drag)\n    document.removeEventListener('mouseup', stop)\n  }\n\n  const handleDoubleClick = () => {\n    if (opened.includes(Number(id))) return;\n    setOpened(prev => [ ...prev, Number(id)])\n  }\n\n  const nestFolder = (e) => {\n    e.preventDefault()\n    const folder = e.target.parentElement ? e.target.parentElement.parentElement : null;\n    if (folder) {\n      folder.hidden = true\n      let nestable = document.elementFromPoint(e.clientX, e.clientY)\n      if (nestable = nestable.closest(\".droppable\")) {\n        if (nestable.className.slice(0, 7) !== \"current\") {\n          nestable.className = \"current \" + nestable.className\n          setNest(nestable)\n        }\n      } else if (nestable = document.querySelector(\".current\")) {\n        nestable.className = nestable.className.slice(8)\n        setNest(document.querySelector(\".App\"))\n      }\n      folder.hidden = false\n    }\n  }\n\n  const handleInput = (e) => {\n    const name = e.target.value.replace(/&nbsp;/g, \" \")\n    setValue(name)\n    delayedQuery(name.length ? name : null);\n  }\n\n  const delayedQuery = useCallback(\n    debounce((name) => {\n      const temp = { ...folders }\n      temp[id].title = name\n      setFolders(temp)\n    }, 500),\n    []\n  );\n\n  return (\n    <div id={`f-${id}`}\n      ref={folderEl}\n      className={className}\n      style={{ \"position\": position, \"top\": Math.min(y, dimensions.height - 94), \"left\": Math.min(x, dimensions.width - 94), \"zIndex\": z }}>\n      <div className=\"folder-image-container\">\n        <img draggable=\"false\"\n          id={id}\n          className=\"folder-image\"\n          alt=\"\"\n          src=\"http://icon-park.com/imagefiles/folder_icon_yellow.png\"\n          onMouseDown={(e) => start(e)}\n          onDoubleClick={() => handleDoubleClick()} \n        />\n      </div>\n      <div className=\"folder-name-container\" >\n        <ContentEditable\n          id=\"input\"\n          html={value}\n          data-column=\"item\"\n          className=\"content-editable\"\n          onChange={(e) => handleInput(e)} \n        />\n      </div>\n    </div>\n  )\n}","/Users/justin/Desktop/stuff/projects/react-desktop/src/contents/contents.js",["71","72","73"],"import './contents.css'\nimport React, { useState, useEffect, useRef } from 'react'\nimport ContentsBorder from './contentsBorder'\nimport Folder from '../folder/folder'\nimport Doc from '../doc/doc'\n\nexport default function Contents({ id, children, folders, setFolders, contentX, contentY, contentWidth, contentHeight, dimensions, opened, setOpened, accessToken }) {\n\n    const contentsEl = useRef(null)\n    const contentsContainerEl = useRef(null)\n    const [gridRow, setGridRow] = useState(\"\")\n    const [gridCol, setGridCol] = useState(\"\")\n    const [offSetX, setOffSetX] = useState(0)\n    const [offSetY, setOffSetY] = useState(0)\n    const [x, setX] = useState(contentX)\n    const [y, setY] = useState(contentY)\n    const [className, setClassName] = useState(\"droppable contents\")\n    const [width, setWidth] = useState(contentWidth)\n    const [height, setHeight] = useState(contentHeight)\n    const [dropped, setdropped] = useState(false)\n\n    useEffect(() => {\n        const contents = contentsEl.current\n        const width = contents.clientWidth\n        const height = contents.clientHeight\n        const row = Math.floor(height / 100)\n        const col = Math.floor(width / 100)\n        setGridRow(\"100px \".repeat(row))\n        setGridCol(\"100px \".repeat(col))\n        const children = contents.children\n        for (let i = 0; i < children.length; i++) {\n            children[i].style.gridRowStart = Math.floor(i / col) + 1\n            children[i].style.gridColumnStart = (i + 1) % col || col\n        }\n    })\n\n    useEffect(() => {\n        if (offSetY) {\n            document.addEventListener('mousemove', drag)\n            document.addEventListener('mouseup', stop)\n        }\n    }, [offSetY])\n\n    useEffect(() => {\n        if (dropped) {\n            const temp = { ...folders }\n            temp[id.slice(2)].contentX = x\n            temp[id.slice(2)].contentY = y\n            setFolders(temp)\n            setdropped(false)\n        }\n    })\n\n    const start = (e) => {\n        if (e.target.className === \"close-button\") return\n        setClassName(\"contents\")\n        document.querySelector(\".App\").appendChild(contentsContainerEl.current)\n        setOffSetX(e.pageX - e.target.getBoundingClientRect().left)\n        setOffSetY(e.pageY - e.target.getBoundingClientRect().top)\n    }\n\n    const drag = (e) => {\n        e.preventDefault()\n        if (contentsContainerEl.current) {\n            setY(Math.min(Math.max(0, e.pageY - offSetY), document.body.clientHeight - contentsContainerEl.current.offsetHeight))\n            setX(Math.min(Math.max(0, e.pageX - offSetX), document.body.clientWidth - contentsContainerEl.current.offsetWidth))\n        }\n    }\n\n    const stop = (e) => {\n        e.preventDefault()\n        setOffSetX(0)\n        setOffSetY(0)\n        setClassName(\"droppable contents\")\n        setdropped(true)\n        document.removeEventListener('mousemove', drag)\n        document.removeEventListener('mouseup', stop)\n    }\n\n    const handleClose = () => {\n        const _id = Number(id.slice(2))\n        setOpened(prev => prev.filter(id => id !== _id))\n    }\n\n    const handleMouseDown = (e) => {\n        if (e.target.className === \"close-button\" || e.target.className === \"folder-image\") return\n        document.querySelector(\".App\").appendChild(contentsContainerEl.current)\n    }\n\n    const renderChildren = children.map(child => {\n        return (\n            folders[child].type ? \n            <Doc \n                id={child}\n                top={folders[child].top}\n                left={folders[child].left}\n                title={folders[child].title}\n                parent={folders[child].parent}\n                webViewLink={folders[child].webViewLink}\n                iconLink={folders[child].iconLink}\n                folders={folders}\n                setFolders={setFolders}\n                accessToken={accessToken}\n                dimensions={dimensions}\n                key={child}\n            />\n            :\n            <Folder \n                id={child}\n                top={folders[child].top}\n                left={folders[child].left} \n                title={folders[child].title} \n                children={folders[child].children} \n                parent={folders[child].parent} \n                folders={folders}\n                setFolders={setFolders}\n                dimensions={dimensions}\n                opened={opened}\n                setOpened={setOpened}\n                key={child} \n            />\n        )\n    })\n\n    return (\n        <div ref={contentsContainerEl}\n            className=\"contents-container\"\n            onMouseDown={(e) => handleMouseDown(e)}\n            style={{ \"display\": \"grid\", \"top\": Math.min(y, dimensions.height - height - 5), \"left\": Math.min(x, dimensions.width - width - 5), \"width\": `${width}px`, \"height\": `${height}px` }}>\n            <ContentsBorder \n                id={id}\n                width={width} \n                setWidth={setWidth} \n                height={height} \n                setHeight={setHeight} \n                setX={setX} \n                setY={setY} \n                folders={folders}\n                setFolders={setFolders} />\n            <div className=\"contents-handle\"\n                onMouseDown={(e) => start(e)}>\n                <div className=\"close-button\" onClick={() => handleClose()}>&#10006;</div>\n            </div>\n            <div\n                id={id}\n                ref={contentsEl}\n                className={className}\n                style={{ \"gridTemplateColumns\": gridCol, \"gridTemplateRows\": gridRow, \"width\": `${width}px`, \"height\": `${height - 15}px` }}>\n                {renderChildren}\n            </div>\n        </div>\n    )\n}","/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/placeholder.js",[],["74","75"],"/Users/justin/Desktop/stuff/projects/react-desktop/src/folder/ghostFolder.js",["76","77","78","79","80","81"],"/Users/justin/Desktop/stuff/projects/react-desktop/src/contents/contentsBorder.js",["82","83"],"import './contents.css'\nimport React, { useState, useEffect } from 'react';\n\nexport default function ContentsBorder({ id, width, setWidth, height, setHeight, setX, setY, folders, setFolders }) {\n\n    const [section, setSection] = useState(null)\n    const [startX, setStartX] = useState(null)\n    const [startY, setStartY] = useState(null)\n    const [startWidth, setStartWidth] = useState(null)\n    const [startHeight, setStartHeight] = useState(null)\n    const [offSetX, setOffSetX] = useState(0)\n    const [offSetY, setOffSetY] = useState(0)\n    const [finished, setFinished] = useState(false)\n\n    useEffect(() => {\n        if (finished) {\n            const temp = { ...folders }\n            temp[id.slice(2)].contentWidth = width\n            temp[id.slice(2)].contentHeight = height\n            setFolders(temp)\n            setFinished(false)\n        }\n    })\n\n    useEffect(() => {\n        if (section) {\n            document.addEventListener('mousemove', drag)\n            document.addEventListener('mouseup', stop)\n        }\n    }, [section])\n\n    const start = (e) => {\n        setSection(e.target.className)\n        setStartX(e.pageX)\n        setStartY(e.pageY)\n        setStartWidth(width)\n        setStartHeight(height)\n        setOffSetX(e.pageX - e.target.getBoundingClientRect().right)\n        setOffSetY(e.pageY - e.target.getBoundingClientRect().bottom)\n    }\n\n    const drag = (e) => {\n        e.preventDefault()\n        if (section === \"side-top\") {\n            setHeight(Math.max(startHeight - e.pageY + startY, 150))\n            setY(Math.min(e.pageY - offSetY, startY + startHeight - offSetY - 150))\n        } else if (section === \"side-left\") {\n            setWidth(Math.max(startWidth - e.pageX + startX, 150))\n            setX(Math.min(e.pageX - offSetX, startX + startWidth - offSetX - 150))\n        } else if (section === \"side-right\") {\n            setWidth(Math.max(startWidth + e.pageX - startX, 150))\n        } else if (section === \"side-bottom\") {\n            setHeight(Math.max(startHeight + e.pageY - startY, 150))\n        } else if (section === \"corner-1\") {\n            setWidth(Math.max(startWidth - e.pageX + startX, 150))\n            setHeight(Math.max(startHeight - e.pageY + startY, 150))\n            setX(Math.min(e.pageX - offSetX, startX + startWidth - offSetX - 150))\n            setY(Math.min(e.pageY - offSetY, startY + startHeight - offSetY - 150))\n        } else if (section === \"corner-2\") {\n            setWidth(Math.max(startWidth + e.pageX - startX, 150))\n            setHeight(Math.max(startHeight - e.pageY + startY, 150))\n            setY(Math.min(e.pageY - offSetY, startY + startHeight - offSetY - 150))\n        } else if (section === \"corner-3\") {\n            setWidth(Math.max(startWidth - e.pageX + startX, 150))\n            setHeight(Math.max(startHeight + e.pageY - startY, 150))\n            setX(Math.min(e.pageX - offSetX, startX + startWidth - offSetX - 150))\n        } else if (section === \"corner-4\") {\n            setWidth(Math.max(startWidth + e.pageX - startX, 150))\n            setHeight(Math.max(startHeight + e.pageY - startY, 150))\n        }\n    }\n\n    const stop = (e) => {\n        e.preventDefault()\n        document.removeEventListener('mousemove', drag)\n        document.removeEventListener('mouseup', stop)\n        setSection(null)\n        setFinished(true)\n    }\n\n    return (\n        <div onMouseDown={(e) => start(e)}>\n            <div className=\"corner-1\"></div>\n            <div className=\"corner-2\"></div>\n            <div className=\"corner-3\"></div>\n            <div className=\"corner-4\"></div>\n            <div className=\"side-top\" style={{ \"width\": width }}></div>\n            <div className=\"side-left\" style={{ \"height\": height }}></div>\n            <div className=\"side-right\" style={{ \"height\": height }}></div>\n            <div className=\"side-bottom\" style={{ \"width\": width }}></div>\n        </div>\n    )\n}","/Users/justin/Desktop/stuff/projects/react-desktop/src/floating_search_button/floating_search_button.js",["84","85"],"/Users/justin/Desktop/stuff/projects/react-desktop/src/gapi/gapi.js",["86"],"import './gapi.css'\nimport { gapi } from 'gapi-script';\nimport React, { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\nconst SCOPES = \"https://www.googleapis.com/auth/drive  https://www.googleapis.com/auth/drive.appdata\";\n\nexport default function GAPI({ folders, setFolders, accessToken, setAccessToken, signedInUser, setSignedInUser }) {\n    const [updatable, setUpdatable] = useState(false)\n    const [appDataId, setAppDataId] = useState(null)\n\n    useEffect(() => {\n        if (!signedInUser) {\n            console.log(\"siging in\")\n            handleClientLoad()\n        } else {\n            fileExists(\"nerwer_data\")\n        }\n    }, [signedInUser])\n\n    useEffect(() => {\n        if (updatable && appDataId && accessToken) {\n            const xhr = new XMLHttpRequest();\n            xhr.open('PATCH', 'https://www.googleapis.com/upload/drive/v3/files/' + appDataId + '?uploadType=media');\n            xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);\n            xhr.responseType = 'json';\n            xhr.send(JSON.stringify(folders));\n        }\n    }, [folders, updatable, appDataId, accessToken])\n\n    /**\n     *  Sign in the user upon button click.\n     */\n    const handleAuthClick = (event) => {\n        gapi.auth2.getAuthInstance().signIn();\n    };\n\n    /**\n     *  Called when the signed in status changes, to update the UI\n     *  appropriately. After a sign-in, the API is called.\n     */\n    const updateSigninStatus = (isSignedIn) => {\n        if (isSignedIn) {\n            // Set the signed in user\n            const instance = gapi.auth2.getAuthInstance()\n            setSignedInUser(instance.currentUser.je.Qt);\n\n            // get access token\n            const key = Object.keys(instance.currentUser)[0]\n            const key2 = Object.keys(instance.currentUser[key])[1]\n            setAccessToken(instance.currentUser[key][key2].access_token)\n        } else {\n            // prompt user to sign in\n            // handleAuthClick();\n            // greeting()\n        }\n    };\n\n    /**\n     *  Sign out the user upon button click.\n     */\n    const handleSignOutClick = () => {\n        gapi.auth2.getAuthInstance().signOut();\n        setSignedInUser(null);\n    };\n\n    /**\n     *  Initializes the API client library and sets up sign-in state\n     *  listeners.\n     */\n    const initClient = () => {\n        gapi.client\n            .init({\n                apiKey: API_KEY,\n                clientId: CLIENT_ID,\n                discoveryDocs: DISCOVERY_DOCS,\n                scope: SCOPES,\n            }).then(\n                function () {\n                    // Listen for sign-in state changes.\n                    gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n\n                    // Handle the initial sign-in state.\n                    updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n                },\n                function (error) { \n                    alert(JSON.stringify(error, null, 2));\n                }\n            );\n    };\n\n    const handleClientLoad = () => {\n        gapi.load('client:auth2', initClient);\n    };\n\n    function fileExists(fileName) {\n        const request = gapi.client.drive.files.list({\n            spaces: 'appDataFolder',\n            fields: 'files(id, name, modifiedTime)'\n        });\n        request.execute(res => {\n            const appData = res.files.find(f => f.name === fileName)\n            if (appData) {\n                gapi.client.drive.files.get({\n                    'fileId': appData.id,\n                    'alt': 'media'\n                }).then(r => {\n                    setFolders(JSON.parse(r.body))\n                    setAppDataId(appData.id)\n                    setUpdatable(true)\n                })\n            } else {\n                // console.log(\"creating file\")\n                createPositionsFile()\n            }\n        });\n    };\n\n    function createPositionsFile() {\n        var file = new Blob([JSON.stringify(folders)], { type: 'text/javascript' });\n        var metadata = {\n            'name': 'nerwer_data', // Filename at Google Drive\n            'mimeType': 'text/javascript', // mimeType at Google Drive\n            'parents': ['appDataFolder']\n        };\n        // id: \"1aQcrCKWjnS9uU2cYpWEHioC2JkswMdkcHPiokt6aGc2ydBwBfA\"\n        var form = new FormData();\n        form.append('metadata', new Blob([JSON.stringify(metadata)], { type: 'application/json' }));\n        form.append('file', file);\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('post', 'https://www.googleapis.com/upload/drive/v3/files?uploadType=multipart&fields=id');\n        xhr.setRequestHeader('Authorization', 'Bearer ' + accessToken);\n        xhr.responseType = 'json';\n        xhr.onload = () => {\n            console.log(xhr.response.id); // Retrieve uploaded file ID.\n        };\n        xhr.send(form);\n    }\n\n    return (\n        <div className=\"auth-container\">\n            {signedInUser ? \n                <button className=\"center\" onClick={() => handleSignOutClick()}><FontAwesomeIcon icon={faSignOutAlt} /></button>\n                : \n                <button onClick={() => handleAuthClick()}>Authorize</button>}\n            {signedInUser ? \n                \" to lose said functionality!\"\n                : \n                \" to gain said functionality!\"}\n        </div>\n    );\n};","/Users/justin/Desktop/stuff/projects/react-desktop/src/doc/doc.js",["87","88","89","90","91","92","93"],"import './doc.css'\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\nimport ContentEditable from 'react-contenteditable'\nimport docImage from './filledDrive.png'\nimport { debounce } from 'lodash'\n\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nexport default function Doc({ id, title, parent, left, top, folders, setFolders, setCloseSearch, searchItem, webViewLink, iconLink, accessToken, dimensions }) {\n\n    const fileEl = useRef(null)\n    const [className, setClassName] = useState(\"file\")\n    const [inputClassName, setInputClassName] = useState(\"file-name-container\")\n    const [value, setValue] = useState(null)\n    const [offSetX, setOffSetX] = useState(0)\n    const [offSetY, setOffSetY] = useState(0)\n    const [position, setPosition] = useState(parent ? \"grid\" : \"fixed\")\n    const [x, setX] = useState(left)\n    const [y, setY] = useState(top)\n    const [z, setZ] = useState(\"0\")\n    const [nest, setNest] = useState(null)\n    const [duplicate, setDuplicate] = useState(false)\n    const [update, setUpdate] = useState(false)\n\n    useEffect(() => {\n        if (nest && update) {\n            const nestClassName = nest.className.split(\" \")\n            const temp = { ...folders }\n\n            let replace = true;\n            if (duplicate) {\n                if (temp[id].parent === null) {\n                    alert(`${temp[id].title} already exist on the desktop`)\n                    replace = false\n                } else {\n                    if (nest.id.slice(2) == temp[id].parent) {\n                        alert(`${temp[id].title} already exist in this folder`)\n                    } else if (window.confirm(`${temp[id].title} already exist in folder ${temp[temp[id].parent].title} -- move it?`)) {\n                        console.log(\"replacing\")\n                    } else {\n                        replace = false\n                    }\n                }\n            }\n            \n            if (!temp[id]) {\n                temp[id] = {\n                    'top': null,\n                    'left': null,\n                    'title': title,\n                    'parent': null,\n                    'type': 'doc',\n                    'webViewLink': webViewLink,\n                    'iconLink': iconLink\n                }\n            } else if (temp[id].parent) {\n                temp[temp[id].parent].children = \n                temp[temp[id].parent].children.filter(folderId => folderId !== id)\n            }\n            \n            if (!replace) {\n                setFolders(temp)\n            } else if (nestClassName[1] === \"droppable\") {\n                temp[nest.id.slice(2)].children.push(Number(id) ? Number(id) : id)\n                temp[id].parent = Number(nest.id.slice(2))\n                setPosition(null)\n                setFolders(temp)\n                nest.className = nest.className.slice(8)\n            } else if (nest.id === \"App\") {\n                console.log(\"effecting postion\")\n                temp[id].parent = null\n                temp[id].top = y\n                temp[id].left = x\n                setFolders(temp)\n            }\n            if (searchItem) {\n                document.getElementById(\"results-container\").appendChild(fileEl.current)\n                setY(null)\n                setX(null)\n            }\n            setUpdate(false)\n        }\n    })\n\n    useEffect(() => {\n        if (offSetY) {\n            document.addEventListener('mousemove', drag)\n            document.addEventListener('mouseup', stop)\n        }\n    }, [offSetY])\n\n    useEffect(() => {\n        if (position === null) {\n            setY(nest.getBoundingClientRect().top)\n            setX(nest.getBoundingClientRect().left + 3)\n            setPosition(\"grid\")\n        } else if (position === \"fixed\") {\n            if (parent !== null) {\n                document.querySelector(\".App\").appendChild(fileEl.current)\n            }\n        }\n    }, [position])\n\n    const start = (e) => {\n        if (folders[id] && e.target.closest(\".keep-open\")) {\n            setDuplicate(true)\n        } else if (duplicate) {\n            setDuplicate(false)\n        }\n        setClassName(\"file\")\n        setZ(\"1000\")\n        setOffSetX(e.pageX - e.target.getBoundingClientRect().left + 5)\n        setOffSetY(e.pageY - e.target.getBoundingClientRect().top + 5)\n    }\n\n    const drag = (e) => {\n        e.preventDefault()\n        if (position !== \"fixed\") setPosition(\"fixed\")\n        if (fileEl.current) {\n            setY(Math.min(Math.max(0, e.pageY - offSetY), document.body.clientHeight - fileEl.current.offsetHeight))\n            setX(Math.min(Math.max(0, e.pageX - offSetX), document.body.clientWidth - fileEl.current.offsetWidth))\n        }\n        nestFolder(e)\n    }\n\n    const stop = (e) => {\n        e.preventDefault()\n        if (parent !== null && document.getElementById(`c-${parent}`) && e.target.parentElement.parentElement.parentElement.id === \"App\") {\n            document.getElementById(`c-${parent}`).appendChild(fileEl.current)\n        }\n        setOffSetX(0)\n        setOffSetY(0)\n        setZ(\"0\")\n        setClassName(\"droppable file\")\n        setUpdate(true)\n        if (!nest && !parent) setNest(document.querySelector(\".App\"))\n        document.removeEventListener('mousemove', drag)\n        document.removeEventListener('mouseup', stop)\n    }\n\n    const nestFolder = (e) => {\n        e.preventDefault()\n        const doc = e.target.parentElement ? e.target.parentElement.parentElement : null;\n        if (doc) {\n            doc.hidden = true\n            let nestable = document.elementFromPoint(e.clientX, e.clientY)\n            if (document.getElementById(\"results-open\") && nestable.className !== \"results-container\") {\n                setCloseSearch(true)\n                setNest(document.querySelector(\".App\"))\n            }\n            if (nestable = nestable.closest(\".droppable\")) {\n                if (nestable.className.slice(0, 7) !== \"current\") {\n                    nestable.className = \"current \" + nestable.className\n                    setNest(nestable)\n                }\n            } else if (nestable = document.querySelector(\".current\")) {\n                nestable.className = nestable.className.slice(8)\n                setNest(document.querySelector(\".App\"))\n            }\n            doc.hidden = false\n        }\n    }\n\n    const handleInput = (e) => {\n        const name = e.target.value.replace(/&nbsp;/g, \" \")\n        setValue(name)\n        delayedQuery(name.length ? name : null);\n    }\n\n    const delayedQuery = useCallback(\n        debounce((name) => renameDriveFile(id, name), 500),\n        []\n    );\n\n    function renameDriveFile(fileId, name) {\n        fetch(`https://www.googleapis.com/drive/v3/files/${fileId}?key=${API_KEY}`, {\n            headers: {\n                'Authorization': `Bearer ${accessToken}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ 'name': `${name}` }),\n            method: 'PATCH'\n        })\n    }\n\n    const handleDoubleClick = () => {\n        window.open(webViewLink)\n    }\n\n    const handleFocus = () => {\n        setInputClassName(\"file-name-container-focus\")\n    }\n\n    const handleBlur = () => {\n        setInputClassName(\"file-name-container\")\n    }\n\n    return (\n        <div \n            id={`d-${id}`}\n            ref={fileEl}\n            className={className}\n            style={{ \"position\": position, \"top\": Math.min(y, dimensions.height - 94), \"left\": Math.min(x, dimensions.width - 94), \"zIndex\": z }}\n            >\n            <div className=\"file-image-container\">\n                <img draggable=\"false\"\n                    id={id}\n                    className=\"file-image\"\n                    alt=\"\"\n                    src={docImage}\n                    onMouseDown={(e) => start(e)}\n                    onDoubleClick={() => handleDoubleClick()}\n                />\n                <img draggable=\"false\"\n                    id={id}\n                    className=\"file-icon\"\n                    alt=\"\"\n                    src={iconLink}\n                    onMouseDown={(e) => start(e)}\n                    onDoubleClick={() => handleDoubleClick()}\n                />\n            </div>\n            <div className={inputClassName} >\n                <ContentEditable\n                    id=\"input\"\n                    html={value ? value : title}\n                    data-column=\"item\"\n                    className=\"content-editable\"\n                    onChange={(e) => handleInput(e)}\n                    onFocus={() => handleFocus()}\n                    onBlur={() => handleBlur()}\n                />\n            </div>\n        </div>\n    )\n}","/Users/justin/Desktop/stuff/projects/react-desktop/src/greeting/greeting.js",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":182,"column":9,"nodeType":"104","endLine":182,"endColumn":48},{"ruleId":"105","severity":1,"message":"106","line":21,"column":3,"nodeType":"100","endLine":21,"endColumn":12,"suggestions":"107"},{"ruleId":"105","severity":1,"message":"108","line":56,"column":6,"nodeType":"109","endLine":56,"endColumn":15,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":68,"column":6,"nodeType":"109","endLine":68,"endColumn":16,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":114,"column":11,"nodeType":"115","messageId":"116","endLine":114,"endColumn":52},{"ruleId":"113","severity":1,"message":"114","line":119,"column":18,"nodeType":"115","messageId":"116","endLine":119,"endColumn":63},{"ruleId":"105","severity":1,"message":"117","line":133,"column":24,"nodeType":"100","endLine":133,"endColumn":35},{"ruleId":"105","severity":1,"message":"118","line":22,"column":5,"nodeType":"100","endLine":22,"endColumn":14,"suggestions":"119"},{"ruleId":"105","severity":1,"message":"108","line":42,"column":8,"nodeType":"109","endLine":42,"endColumn":17,"suggestions":"120"},{"ruleId":"105","severity":1,"message":"121","line":44,"column":5,"nodeType":"100","endLine":44,"endColumn":14,"suggestions":"122"},{"ruleId":"94","replacedBy":"123"},{"ruleId":"96","replacedBy":"124"},{"ruleId":"98","severity":1,"message":"125","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":19},{"ruleId":"105","severity":1,"message":"126","line":33,"column":8,"nodeType":"109","endLine":33,"endColumn":16,"suggestions":"127"},{"ruleId":"105","severity":1,"message":"128","line":41,"column":8,"nodeType":"109","endLine":41,"endColumn":17,"suggestions":"129"},{"ruleId":"98","severity":1,"message":"130","line":74,"column":11,"nodeType":"100","messageId":"101","endLine":74,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":108,"column":17,"nodeType":"115","messageId":"116","endLine":108,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":113,"column":24,"nodeType":"115","messageId":"116","endLine":113,"endColumn":69},{"ruleId":"105","severity":1,"message":"131","line":15,"column":5,"nodeType":"100","endLine":15,"endColumn":14,"suggestions":"132"},{"ruleId":"105","severity":1,"message":"108","line":30,"column":8,"nodeType":"109","endLine":30,"endColumn":17,"suggestions":"133"},{"ruleId":"105","severity":1,"message":"134","line":16,"column":5,"nodeType":"100","endLine":16,"endColumn":14,"suggestions":"135"},{"ruleId":"105","severity":1,"message":"117","line":73,"column":26,"nodeType":"100","endLine":73,"endColumn":37},{"ruleId":"105","severity":1,"message":"136","line":23,"column":8,"nodeType":"109","endLine":23,"endColumn":22,"suggestions":"137"},{"ruleId":"105","severity":1,"message":"138","line":25,"column":5,"nodeType":"100","endLine":25,"endColumn":14,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":36,"column":42,"nodeType":"142","messageId":"143","endLine":36,"endColumn":44},{"ruleId":"105","severity":1,"message":"108","line":90,"column":8,"nodeType":"109","endLine":90,"endColumn":17,"suggestions":"144"},{"ruleId":"105","severity":1,"message":"111","line":102,"column":8,"nodeType":"109","endLine":102,"endColumn":18,"suggestions":"145"},{"ruleId":"113","severity":1,"message":"114","line":151,"column":17,"nodeType":"115","messageId":"116","endLine":151,"endColumn":58},{"ruleId":"113","severity":1,"message":"114","line":156,"column":24,"nodeType":"115","messageId":"116","endLine":156,"endColumn":69},{"ruleId":"105","severity":1,"message":"117","line":170,"column":26,"nodeType":"100","endLine":170,"endColumn":37},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'GAPI' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUpdate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [update, nest, folders, id, originalPos, setFolders, y, x] as a second argument to the useEffect Hook.",["148"],"React Hook useEffect has missing dependencies: 'drag' and 'stop'. Either include them or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has missing dependencies: 'nest' and 'parent'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setY' needs the current value of 'nest'.",["150"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect contains a call to 'setGridRow'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["151"],["152"],"React Hook useEffect contains a call to 'setdropped'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [dropped, folders, id, x, y, setFolders] as a second argument to the useEffect Hook.",["153"],["146"],["147"],"'Placeholder' is defined but never used.","React Hook useEffect has a missing dependency: 'nest'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'stop'. Either include it or remove the dependency array.",["155"],"'drag' is assigned a value but never used.","React Hook useEffect contains a call to 'setFinished'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [finished, folders, id, width, height, setFolders] as a second argument to the useEffect Hook.",["156"],["157"],"React Hook useEffect contains a call to 'setClassName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [closeSearch, setCloseSearch] as a second argument to the useEffect Hook.",["158"],"React Hook useEffect has missing dependencies: 'fileExists' and 'handleClientLoad'. Either include them or remove the dependency array.",["159"],"React Hook useEffect contains a call to 'setUpdate'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [nest, update, folders, duplicate, id, searchItem, title, webViewLink, iconLink, setFolders, y, x] as a second argument to the useEffect Hook.",["160"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["161"],["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"165","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"165","fix":"188"},{"desc":"167","fix":"189"},"Add dependencies array: [update, nest, folders, id, originalPos, setFolders, y, x]",{"range":"190","text":"191"},"Update the dependencies array to be: [drag, offSetY, stop]",{"range":"192","text":"193"},"Update the dependencies array to be: [nest, parent, position]",{"range":"194","text":"195"},"Add dependencies array: []",{"range":"196","text":"197"},{"range":"198","text":"193"},"Add dependencies array: [dropped, folders, id, x, y, setFolders]",{"range":"199","text":"200"},"Update the dependencies array to be: [moving, nest]",{"range":"201","text":"202"},"Update the dependencies array to be: [offSetY, stop]",{"range":"203","text":"204"},"Add dependencies array: [finished, folders, id, width, height, setFolders]",{"range":"205","text":"206"},"Update the dependencies array to be: [drag, section, stop]",{"range":"207","text":"208"},"Add dependencies array: [closeSearch, setCloseSearch]",{"range":"209","text":"210"},"Update the dependencies array to be: [fileExists, handleClientLoad, signedInUser]",{"range":"211","text":"212"},"Add dependencies array: [nest, update, folders, duplicate, id, searchItem, title, webViewLink, iconLink, setFolders, y, x]",{"range":"213","text":"214"},{"range":"215","text":"193"},{"range":"216","text":"195"},[1854,1854],", [update, nest, folders, id, originalPos, setFolders, y, x]",[2007,2016],"[drag, offSetY, stop]",[2345,2355],"[nest, parent, position]",[1516,1516],", []",[1693,1702],[1950,1950],", [dropped, folders, id, x, y, setFolders]",[1359,1367],"[moving, nest]",[1605,1614],"[offSetY, stop]",[861,861],", [finished, folders, id, width, height, setFolders]",[1038,1047],"[drag, section, stop]",[896,896],", [closeSearch, setCloseSearch]",[942,956],"[fileExists, handleClientLoad, signedInUser]",[3328,3328],", [nest, update, folders, duplicate, id, searchItem, title, webViewLink, iconLink, setFolders, y, x]",[3505,3514],[3895,3905]]